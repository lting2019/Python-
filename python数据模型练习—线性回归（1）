#案例分析'D:\222学习\数据分析案例资料\Advertising.csv'
#对一份数据包含产品销售额和三个不同渠道的广告成本（TV/radio/newspaper）做回归分析

#需要解决的问题：
#1、哪些变量对销售额有影响
#2、怎么预测销售额
#3、预测的效果的好坏

#==========python3+jupyter==============

#导入第三方包
import pandas as pd
import numpy as np
import statsmodels.formula.api as smf
from sklearn.cross_validation import train_test_split
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

#读取外部的销售数据
sales=pd.read_csv(r'D:\222学习\数据分析案例资料\Advertising.csv',engine='python')
sales.head()
sales.describe()

#将数据拆分为训练集和测试集
#抽样--构造训练集和测试集
train,test=train_test_split(sales,train_size=0.8,random_state=1234)
train.describe()
test.describe()

#建模
fit=smf.ols('sales~TV+radio+newspaper',data=train).fit()
#模型概览的反馈
fit.summary()

#通过模型发现F统计量的P值为1.01e-75，P值很小，说明 模型通过显著性检验
#从系数的P值来看，newspaper的P值大于5%，故该变量对销售额影响不大
#删除该变量进行第二次建模

#重新建模
fit2=smf.ols('sales~TV+radio',data=train.drop('newspaper',axis=1)).fit()
fit2.summary()

#第二次建模模型通过了显著性检验，且所有变量也通过了检验

#接下来评估模型的效果，即预测值和真实值对比

#第1个模型的预测结果
pred=fit.predict(exog=test)
#第2个模型的预测结果
pred2=fit2.predict(exog=test.drop('newspaper',axis=1))

#模型效果对比,借助RMSE（均方根误差，即真实值与预测值之间的均方根，越小说明模型越好）
RMSE=np.sqrt(mean_squared_error(test.sales,pred))
RMSE2=np.sqrt(mean_squared_error(test.sales,pred2))

print('第一个模型的预测效果：RMSE=%.4f\n'%RMSE)
print('第二个模型的预测效果：RMSE=%.4f\n'%RMSE2)

#RMSE小说明模型较好，第二模型的比第一个的小

#真实值与预测值的关系
plt.style.use('ggplot')
plt.rcParams['font.sans-serif']='SimHei'
#散点图
plt.scatter(test.sales,
            pred,
            color='steelblue',
            label='观测点')
#回归线
plt.plot([test.sales.min(),test.sales.max()],
         [pred.min(),pred.max()],
         'r--',
         lw=2,
         label='拟合线',
        )

plt.title('真实值vs.预测值')
plt.xlabel('真实值')
plt.ylabel('预测值')

plt.tick_params(top='off',right='off')
plt.legend(loc='upper left')
plt.show()
